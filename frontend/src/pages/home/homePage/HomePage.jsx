import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import "./HomePage.css";
import HomePageService from "../../../services/HomePageService";
import Blog from "../Blog/Blog";
// import DashboardPage from "../../dashboardPage/DashboardPage";
import heroImage from "../../../assets/images/FPTers.png";
import aboutImage from "../../../assets/images/1112.jpg";
import axios from "axios";


export default function HomePage() {
  // State for health resources
  const [healthResources, setHealthResources] = useState([]);
  // State for blog posts
  const [blogPosts, setBlogPosts] = useState([]);
  // State for loading status
  const [isLoading, setIsLoading] = useState(true);
  // State for auth status (temporary)
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [authChecked, setAuthChecked] = useState(false);
  // State for school info
  const [schoolInfo, setSchoolInfo] = useState({});
  const [showBackToTop, setShowBackToTop] = useState(false);

  useEffect(() => {
  

    // Fetch blog posts from API
    const fetchBlogPosts = async () => {
      try {
        const data = await HomePageService.getBlogPosts();
        setBlogPosts(data);
      } catch (error) {
        console.error("Error fetching blog posts:", error);
        // Fallback to mock data if API fails
        const mockData = [
          {
            id: 1,
            title: "5 c√°ch gi√∫p h·ªçc sinh gi·∫£m cƒÉng th·∫≥ng trong m√πa thi",
            excerpt: "M√πa thi l√† kho·∫£ng th·ªùi gian ƒë·∫ßy √°p l·ª±c ƒë·ªëi v·ªõi h·ªçc sinh. Trong b√†i vi·∫øt n√†y...",
            author: "ThS. Nguy·ªÖn Th·ªã Hoa",
            thumbnail: "https://th.bing.com/th/id/OIP.fnH5EO0esItVod7gcr26vAHaFZ?w=238&h=180&c=7&r=0&o=5&cb=iwc2&dpr=2&pid=1.7",
            publishedAt: "2023-06-01",
          },
          {
            id: 2,
            title: "T·∫ßm quan tr·ªçng c·ªßa b·ªØa s√°ng ƒë·ªëi v·ªõi h·ªçc sinh",
            excerpt: "Nhi·ªÅu nghi√™n c·ª©u ƒë√£ ch·ªâ ra r·∫±ng b·ªØa s√°ng l√† b·ªØa ƒÉn quan tr·ªçng nh·∫•t trong ng√†y...",
            author: "BS. Tr·∫ßn VƒÉn Kh·ªèe",
            thumbnail: "https://th.bing.com/th/id/OIP.mlzELnpvexT7SMT8-mMtQgHaE7?w=283&h=188&c=7&r=0&o=5&cb=iwc2&dpr=2&pid=1.7",
            publishedAt: "2023-05-20",
          },
          {
            id: 3,
            title: "C√°ch ph√°t hi·ªán s·ªõm c√°c v·∫•n ƒë·ªÅ v·ªÅ th·ªã l·ª±c ·ªü tr·∫ª",
            excerpt: "Th·ªã l·ª±c k√©m c√≥ th·ªÉ ·∫£nh h∆∞·ªüng nghi√™m tr·ªçng ƒë·∫øn kh·∫£ nƒÉng h·ªçc t·∫≠p c·ªßa tr·∫ª...",
            author: "BS. L√™ Th·ªã Nh√£n",
            thumbnail: "https://th.bing.com/th/id/OIP.d7mUbY74nBjN1cwzc9bS7AHaEe?w=301&h=182&c=7&r=0&o=5&cb=iwc2&dpr=2&pid=1.7",
            publishedAt: "2023-05-10",
          },
        ];
        setBlogPosts(mockData);
      }
    };

    // Fetch school info from API
    const fetchSchoolInfo = async () => {
      try {
        const data = await HomePageService.getSchoolInfo();
        setSchoolInfo(data);
      } catch (error) {
        console.error("Error fetching school info:", error);
      }
    };

    // Execute all fetch functions
    const fetchAllData = async () => {
      setIsLoading(true);
      await Promise.all([
       
        fetchBlogPosts(),
        fetchSchoolInfo()
      ]);
      setIsLoading(false);
    };

    fetchAllData();

    // Check authentication status
    const checkAuth = async () => {
      const token = localStorage.getItem("token");
      if (!token) {
        setIsAuthenticated(false);
        setAuthChecked(true);
        return;
      }
      try {
        // S·ª≠ d·ª•ng ƒë√∫ng endpoint x√°c th·ª±c user
        const apiUrl = import.meta.env.VITE_API_USER || "";
        const url = apiUrl ? `${apiUrl}/user/me` : "/api/user/me";
        const res = await axios.get(url, {
          headers: { Authorization: `Bearer ${token}` }
        });
        setIsAuthenticated(true);
      } catch (error) {
        setIsAuthenticated(false);
        localStorage.removeItem("token");
      }
      setAuthChecked(true);
    };
    checkAuth();

    const handleScroll = () => {
      setShowBackToTop(window.scrollY > 200);
    };
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // Handle contact form submission
  const handleContactSubmit = async (e) => {
    e.preventDefault();
    const formData = {
      name: e.target.elements[0].value,
      email: e.target.elements[1].value,
      message: e.target.elements[2].value
    };
    
    try {
      await HomePageService.sendContactMessage(formData);
      alert('Tin nh·∫Øn c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!');
      e.target.reset();
    } catch (error) {
      console.error('Error sending message:', error);
      alert('C√≥ l·ªói x·∫£y ra khi g·ª≠i tin nh·∫Øn. Vui l√≤ng th·ª≠ l·∫°i sau!');
    }
  };

  // Filter resources based on auth status
  const filteredResources = healthResources.filter(
    (resource) => !resource.restricted || isAuthenticated
  );

  return (
    <div className="home-page" id="home">
      {/* Back to Top Button */}
      {showBackToTop && (
        <button className="backtotop-fixed" onClick={() => window.scrollTo({top: 0, behavior: 'smooth'})} title="L√™n ƒë·∫ßu trang">
          <svg width="28" height="28" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><polyline points="18 15 12 9 6 15"></polyline></svg>
        </button>
      )}
      {/* Hero Section */}
      <section className="hero-section">
        <div className="hero-container">
          <div className="hero-grid">
            <div className="hero-content">
              <div className="services-badge">
                <span className="services-badge-icon">üè´</span>
                Tr∆∞·ªùng Ti·ªÉu H·ªçc H√†ng ƒê·∫ßu
              </div>
              <h1 className="hero-title">
                 <span className="hero-title-highlight">Tr∆∞·ªùng Ti·ªÉu H·ªçc FPT</span>
                <span className="hero-title-secondary">ChƒÉm s√≥c s·ª©c kh·ªèe to√†n di·ªán</span>
              </h1>
              <p className="hero-description">
                {schoolInfo.slogan || "M√¥i tr∆∞·ªùng gi√°o d·ª•c hi·ªán ƒë·∫°i - ChƒÉm s√≥c s·ª©c kh·ªèe to√†n di·ªán cho h·ªçc sinh. V·ªõi c∆° s·ªü v·∫≠t ch·∫•t hi·ªán ƒë·∫°i v√† ƒë·ªôi ng≈© gi√°o vi√™n chuy√™n nghi·ªáp."}
              </p>
              <div className="hero-buttons">
                <Link to="/about" className="btn-hero-primary">
                  T√¨m hi·ªÉu th√™m
                </Link>
                {authChecked && !isAuthenticated && (
                  <Link to="/login" className="btn-hero-secondary">
                    ƒêƒÉng nh·∫≠p
                  </Link>
                )}
              </div>
              
            </div>
            
            <div className="hero-image">
              <div className="hero-image-wrapper">
                <div className="color-blob blob-1"></div>
                <div className="color-blob blob-2"></div>
                <div className="color-blob blob-3"></div>
                <img 
                  src={heroImage} 
                  alt="Professional Person"
                  className="hero-main-image"
                />
                <div className="floating-card floating-card-1">
                  <div className="card-icon">üè•</div>
                  <div className="card-text">Y t·∫ø chuy√™n nghi·ªáp</div>
                </div>
                <div className="floating-card floating-card-2">
                  <div className="card-icon">üìö</div>
                  <div className="card-text">Gi√°o d·ª•c ch·∫•t l∆∞·ª£ng</div>
                </div>
                <div className="floating-card floating-card-3">
                  <div className="card-icon">üåü</div>
                  <div className="card-text">M√¥i tr∆∞·ªùng an to√†n</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Introduction Section */}
      <section className="about-section" id="about">
        <div className="about-container">
          <div className="about-grid">
            <div>
              <div className="services-badge">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-badge-icon" aria-hidden="true"><path d="m15.477 12.89 1.515 8.526a.5.5 0 0 1-.81.47l-3.58-2.687a1 1 0 0 0-1.197 0l-3.586 2.686a.5.5 0 0 1-.81-.469l1.514-8.526"></path><circle cx="12" cy="8" r="6"></circle></svg>
                Gi·ªõi thi·ªáu v·ªÅ tr∆∞·ªùng
              </div>
              <h2 className="about-title">M√¥i tr∆∞·ªùng h·ªçc t·∫≠p an to√†n v√† chƒÉm s√≥c s·ª©c kh·ªèe to√†n di·ªán</h2>
              <p className="about-desc">Tr∆∞·ªùng Ti·ªÉu h·ªçc FPT kh√¥ng ch·ªâ ch√∫ tr·ªçng ph√°t tri·ªÉn h·ªçc thu·∫≠t m√† c√≤n ƒë·∫∑t s·ª©c kh·ªèe h·ªçc sinh l√™n h√†ng ƒë·∫ßu, k·∫øt h·ª£p m√¥i tr∆∞·ªùng h·ªçc t·∫≠p hi·ªán ƒë·∫°i v·ªõi d·ªãch v·ª• y t·∫ø chuy√™n nghi·ªáp, ƒë·∫£m b·∫£o h·ªçc sinh ƒë∆∞·ª£c chƒÉm s√≥c to√†n di·ªán c·∫£ v·ªÅ tr√≠ tu·ªá l·∫´n th·ªÉ ch·∫•t.</p>
              <div className="about-reasons">
                <div className="about-reason">
                  <div className="about-reason-icon bg-green">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="about-reason-svg"><path d="M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"></path></svg>
                  </div>
                  <div>
                    <h3 className="about-reason-title">2000+ H·ªçc sinh</h3>
                    <p className="about-reason-desc">M√¥i tr∆∞·ªùng h·ªçc t·∫≠p hi·ªán ƒë·∫°i, an to√†n v√† th√¢n thi·ªán.</p>
          </div>
                </div>
                <div className="about-reason">
                  <div className="about-reason-icon bg-green">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="about-reason-svg"><path d="M16 7h6v6"></path><path d="m22 7-8.5 8.5-5-5L2 17"></path></svg>
                  </div>
                  <div>
                    <h3 className="about-reason-title">150+ Gi√°o vi√™n</h3>
                    <p className="about-reason-desc">Gi√°o vi√™n t·∫≠n t√¢m, lu√¥n ƒë·ªìng h√†nh c√πng h·ªçc sinh.</p>
                  </div>
                </div>
                <div className="about-reason">
                  <div className="about-reason-icon bg-green">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="about-reason-svg"><circle cx="12" cy="12" r="10"></circle><polyline points="12 6 12 12 16 14"></polyline></svg>
                  </div>
                  <div>
                    <h3 className="about-reason-title">10+ Nh√¢n vi√™n y t·∫ø</h3>
                    <p className="about-reason-desc">ChƒÉm s√≥c s·ª©c kh·ªèe chuy√™n nghi·ªáp, h·ªó tr·ª£ y t·∫ø k·ªãp th·ªùi.</p>
                  </div>
                </div>
              </div>
            </div>
            <div className="about-image-wrapper">
              <img src={aboutImage} alt="Tr∆∞·ªùng Ti·ªÉu h·ªçc FPT" className="about-image" />
            </div>
          </div>
        </div>
      </section>

      {/* Health Resources Section */}
      <section id="services" className="services-section">
        <div className="services-container">
          <div className="services-header">
            <div className="services-badge">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-badge-icon"><path d="M11 2v2"></path><path d="M5 2v2"></path><path d="M5 3H4a2 2 0 0 0-2 2v4a6 6 0 0 0 12 0V5a2 2 0 0 0-2-2h-1"></path><path d="M8 15a6 6 0 0 0 12 0v-3"></path><circle cx="20" cy="10" r="2"></circle></svg>
              D·ªãch v·ª• chƒÉm s√≥c s·ª©c kh·ªèe
            </div>
            <h2 className="services-title">D·ªãch v·ª• y t·∫ø h·ªçc ƒë∆∞·ªùng</h2>
            <p className="services-desc">C√°c d·ªãch v·ª• chƒÉm s√≥c v√† qu·∫£n l√Ω s·ª©c kh·ªèe cho h·ªçc sinh</p>
          </div>
          <div className="services-grid">
            {/* Card 1: H·ªì S∆° S·ª©c Kh·ªèe */}
            <div className="services-card">
              <div className="services-card-icon services-card-icon-red">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-card-svg"><path d="M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z"></path></svg>
              </div>
              <h3 className="services-card-title">H·ªì S∆° S·ª©c Kh·ªèe</h3>
              <ul className="services-card-desc services-card-list">
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>Qu·∫£n l√Ω th√¥ng tin s·ª©c kh·ªèe c√° nh√¢n</li>
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>L∆∞u tr·ªØ l·ªãch s·ª≠ kh√°m ch·ªØa b·ªánh</li>
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>Truy xu·∫•t nhanh h·ªì s∆° h·ªçc sinh</li>
              </ul>
                </div>
            {/* Card 2: Khai B√°o Thu·ªëc */}
            <div className="services-card">
              <div className="services-card-icon services-card-icon-green">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-card-svg"><path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"></path><path d="M16 3.128a4 4 0 0 1 0 7.744"></path><path d="M22 21v-2a4 4 0 0 0-3-3.87"></path><circle cx="9" cy="7" r="4"></circle></svg>
              </div>
              <h3 className="services-card-title">Khai B√°o Thu·ªëc</h3>
              <ul className="services-card-desc services-card-list">
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>Khai b√°o thu·ªëc s·ª≠ d·ª•ng c√° nh√¢n</li>
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>Qu·∫£n l√Ω ƒë∆°n thu·ªëc h·ªçc sinh</li>
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>ƒê·∫£m b·∫£o an to√†n s·ª≠ d·ª•ng thu·ªëc</li>
              </ul>
                </div>
            {/* Card 3: S·ª± Ki·ªán Y T·∫ø */}
            <div className="services-card">
              <div className="services-card-icon services-card-icon-darkgreen">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-card-svg"><path d="M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"></path></svg>
              </div>
              <h3 className="services-card-title">S·ª± Ki·ªán Y T·∫ø</h3>
              <ul className="services-card-desc services-card-list">
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>C·∫≠p nh·∫≠t s·ª± ki·ªán y t·∫ø m·ªõi nh·∫•t</li>
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>Th√¥ng b√°o tai n·∫°n, s·ª± c·ªë</li>
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>L·ªãch s·ª≠ s·ª± ki·ªán theo nƒÉm h·ªçc</li>
              </ul>
                </div>
            {/* Card 4: Ti√™m Ch·ªßng */}
            <div className="services-card">
              <div className="services-card-icon services-card-icon-yellow">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-card-svg"><path d="M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"></path><path d="M14 2v4a2 2 0 0 0 2 2h4"></path><path d="M10 9H8"></path><path d="M16 13H8"></path><path d="M16 17H8"></path></svg>
              </div>
              <h3 className="services-card-title">Ti√™m Ch·ªßng</h3>
              <ul className="services-card-desc services-card-list">
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>Qu·∫£n l√Ω l·ªãch s·ª≠ ti√™m ch·ªßng</li>
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>Nh·∫Øc nh·ªü l·ªãch ti√™m ƒë·ªãnh k·ª≥</li>
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>B√°o c√°o ti√™m ch·ªßng to√†n tr∆∞·ªùng</li>
              </ul>
                </div>
            {/* Card 5: Ki·ªÉm Tra ƒê·ªãnh K·ª≥ */}
            <div className="services-card">
              <div className="services-card-icon services-card-icon-purple">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-card-svg">
                  <rect x="4" y="4" width="16" height="16" rx="2"/>
                  <path d="M9 10h6"/>
                  <path d="M9 14h2"/>
                  <path d="M15 14h.01"/>
                </svg>
              </div>
              <h3 className="services-card-title">Ki·ªÉm Tra ƒê·ªãnh K·ª≥</h3>
              <ul className="services-card-desc services-card-list">
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>L·ªãch ki·ªÉm tra s·ª©c kh·ªèe ƒë·ªãnh k·ª≥</li>
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>K·∫øt qu·∫£ ki·ªÉm tra t·ª´ng h·ªçc sinh</li>
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>Th·ªëng k√™ s·ª©c kh·ªèe to√†n tr∆∞·ªùng</li>
              </ul>
                </div>
            {/* Card 6: Qu·∫£n L√Ω Thu·ªëc */}
            <div className="services-card">
              <div className="services-card-icon services-card-icon-indigo">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-card-svg"><path d="M8 2v4"></path><path d="M16 2v4"></path><rect width="18" height="18" x="3" y="4" rx="2"></rect><path d="M3 10h18"></path></svg>
              </div>
              <h3 className="services-card-title">Qu·∫£n L√Ω Thu·ªëc</h3>
              <ul className="services-card-desc services-card-list">
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>Qu·∫£n l√Ω kho thu·ªëc, v·∫≠t t∆∞ y t·∫ø</li>
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>Ki·ªÉm k√™, xu·∫•t nh·∫≠p thu·ªëc</li>
                <li><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="services-li-check"><path d="M21.801 10A10 10 0 1 1 17 3.335"></path><path d="m9 11 3 3L22 4"></path></svg>B√°o c√°o t·ªìn kho, s·ª≠ d·ª•ng</li>
              </ul>
            </div>
          </div>
          
        </div>
      </section>
      
      {/* Blog Section */}
      <section id="blog" className="blog-section">
      <Blog blogPosts={blogPosts} isLoading={isLoading} />
      </section>
      {/* Contact Section */}
      {/* <section className="section contact-section" id="contact">
        <div className="container">
          <div className="contact-content">
            <div className="contact-info">
              <h2>Li√™n h·ªá v·ªõi ch√∫ng t√¥i</h2>
              <p>
                N·∫øu b·∫°n c√≥ c√¢u h·ªèi ho·∫∑c c·∫ßn t∆∞ v·∫•n v·ªÅ s·ª©c kh·ªèe h·ªçc ƒë∆∞·ªùng, vui
                l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.
              </p>
              <ul className="contact-details">
                <li>
                  <i className="icon-location"></i> {schoolInfo.address || "123 ƒê∆∞·ªùng ABC, Qu·∫≠n XYZ, TP. H·ªì Ch√≠ Minh"}
                </li>
                <li>
                  <i className="icon-phone"></i> {schoolInfo.phone || "(028) 1234 5678"}
                </li>
                <li>
                  <i className="icon-email"></i> {schoolInfo.email || "info@truongthptabc.edu.vn"}
                </li>
              </ul>
            </div>
          
          </div>
        </div>
      </section> */}
      
    </div>
  );
}

